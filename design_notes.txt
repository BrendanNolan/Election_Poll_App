A constituency view should probably have two PolicicianModels - one for current 
MPs and one for candidates in upcoming election. Or perhaps it should just have one
PoliticianModel and call PoliticianModel::setElectoralStatus() as needed. 

Constituency objects will probably have to have 
current mp data and this will need to be considered for the 
DisplayROle of the constituency.

I need to think about what loadCache methods - in particular, 
do these call QAbstractItenModel::resetModel() or do their callers 
do this? I feel like their callers should do this. It should be public functions that 
call model QAbstractItenModel::resetModel() and QAbstractItenModel::dataChanged() methods 
etc. 

Do I need two politician tables? One for elected and one for candidates? Or do I just need 
two bool columns called elected and candidate. Probably the latter - that's what I've gone with.

The python script should scrape the web and created the initial database, whose path 
will be, say, blablabla.db. The main function should initialise make the database connection
at some point, with a line like 
    QSqlDatabase::addDatabase("SQLITE", "blablabla.db");
Then, hopefully, whenever a SqlDatabaseManagerFactory is default constructed, the default constrctor's
call to QSqlDatabase::database() (with no arguments) will return a QSqlDatabase that's connected to 
blablabla.db.

Maybe no class should be composed of a QSqlDatabase or an owning pointer to such (see the warning in 
the documentation of QSqlDatabase). Perhaps the database managers' methods should just call 
QSqlDatabase::database() whenever they want to access the database. Not sure. 

I'll need a rectangle layout calculator (to be created on the stack in whatever
method of ConstituencyWidget is responsible for defining the locations of the constituencies). 
I'll also need a rectangle navigator (to be kept by the ConstituencyExplorer) for allowing the user to navigate through constituencies using 
arrow keys. It will probably be wise in this case to give ConstituencyModel a QItemSelectionModel
to keep track of which constituency is currently selected. Clicking on a constituency or
navigating to it with the arrow keys should select it. Double-clicking a constituency or 
pressing ENTER on the curretly selected constituency should activate that constituency.

Politicians should probably be displayed as thumbnails. You should have the option to select some thumbnails and
then to press a button to display more details about the selected politicians (the selection model should know which politicians).
This should perhaps shring the ConstituencyWidget and put a Widget displaying the politician details beside it (or just pop up
a new widget).

A constituency needs to have an area data member.

It's probably not ideal but the convention in this projecvt is that connections to a database on 
file shall be named by the file's absolute file path.
