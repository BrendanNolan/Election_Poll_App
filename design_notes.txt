A constituency view should probably have two PolicicianModels - one for current 
MPs and one for candidates in upcoming election. 

Constituency objects will probably have to have 
current mp data and this will need to be considered for the 
DisplayROle of the constituency.

I need to think about what loadCache methods - in particular, 
do these call QAbstractItenModel::resetModel() or do their callers 
do this? I feel like their callers should do this. It should be public functions that 
call model QAbstractItenModel::resetModel() and QAbstractItenModel::dataChanged() methods 
etc. 

Do I need two politician tables? One for elected and one for candidates? Or do I just need 
two bool columns called elected and candidate. Probably the latter - that's what I've gone with.

The python script should scrape the web and created the initial database, whose path 
will be, say, blablabla.db. The main function should initialise make the database connection
at some point, with a line like 
    QSqlDatabase::addDatabase("SQLITE", "blablabla.db");
Then, hopefully, whenever a SqlDatabaseManagerFactory is default constructed, the default constrctor's
call to QSqlDatabase::database() (with no arguments) will return a QSqlDatabase that's connected to 
blablabla.db.
